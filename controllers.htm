<html><!doctype html>

<html lang="en">

<head>
    <title>Laravel 中文文档</title>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=9,chrome=1">
    <meta name="author" content="Laravel 中国">
    <meta name="description" content="Laravel 中文文档, 致力于推动 Laravel, php-fig 等国外 PHP 新技术, 新理念在中国的发展.">
    <meta name="keywords" content="laravel中国,laravel中文, laravel框架中文, laravel框架中国, php, framework, web, artisans, taylor otwell">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="shortcut icon" href="favicon.png" tppabs="http://laravel-china.qiniudn.com/favicon.png">

    <link href="styles.css" tppabs="http://laravel-china.qiniudn.com/assets/css/styles.css" rel="stylesheet">

    <!--[if IE]><link href="http://laravel-china.qiniudn.com/assets/css/ie.css" rel="stylesheet" type="text/css"><![endif]-->

    <!-- HTML5 elements in less than IE9, yes please! -->
    <!--[if lt IE 9]><script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->

    <!-- If less than IE8 add some JS for the webfont icons -->
    <!--[if lt IE 8]><script src="http://laravel-china.qiniudn.com/assets/js/ie_font.js"></script><![endif]-->

        
    
    <style>
#documentation nav#docs ul li ul li a {
font-weight: 600;
font-size: 13px;
}
nav#primary.fixed {
opacity: .9;
 position: inherit; 
top: 0;
}

p {
font-size: inherit;
line-height: 1.4em;
margin: 0 0 .8em;
}
html, body {
height: 100%;
font-size: 14px;
color: #333333;
font-family: "Heiti SC Light", "Helvetica Neue", Verdana, 微软雅黑, Arial, sans-serif;
background: #e5e5e5;
}
#documentation nav#docs {
    width: 250px;
}
code, kbd, pre, samp {
    font-size: inherit;
}
code {
background: #F1F1F1;
color: #f4645f;
padding: 0 5px;
border-radius: 3px;
}
p {
line-height: 1.8em;
}
#documentation nav#docs {
width: 170px;
}

@media only screen and (min-width: 1024px) {
#documentation #docs-content {
display: block;
float: right;
padding-left: 35px;
padding-right: 35px;
width: 830px;
}
}

.primary-nav-ul li a {
border-bottom: 0;
font-size: 14px;
padding: 0 0 0 25px;
width: auto;
}
.prettyprint code {
font-family: Monaco,Consolas,"Lucida Console",monospace;
font-size: 13px;
}
    </style>
</head>

<body id="index" class="page">

    <!--[if lt IE 7]>
        <p>Your browser is <em>ancient!</em> <a href="http://browsehappy.com/">Upgrade to a different browser</a> or <a href="http://www.google.com/chromeframe/?redirect=true">install Google Chrome Frame</a> to experience this site.</p>
    <![endif]-->

    <div id="wrapper">

    <header id="header" role="header">
    <div class="boxed">
        <div id="tagline">
            <h1><a href="index.htm" tppabs="http://laravel-china.org/" style="color:white; font-wight:bold;">Laravel China</a></h1>
        </div>

        <div id="version">
            <ul class="nolist">
                                    <li class="current">
                        <a href="docs.htm" tppabs="http://laravel-china.org/docs/4-2" title="4.2">4.2</a>
                    </li>
                            </ul>
        </div>
    </div>
</header>

<nav id="primary">
    <div class="boxed">
        <div id="logo-head">
            <a href="index.htm" tppabs="http://laravel-china.org/"><img src="logo-head.png" tppabs="http://laravel-china.qiniudn.com/assets/img/logo-head.png" alt="Laravel"></a>
        </div>
        <ul class="primary-nav-ul">
            <li class="current-item"><a href="docs.htm" tppabs="http://laravel-china.org/docs/docs" title="Documentation">文档</a></li>
            <li><a href="javascript:if(confirm('http://phphub.org/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://phphub.org/'" tppabs="http://phphub.org/" title="PHPhub"  target="_blank">论坛</a></li>
            <li><a href="javascript:if(confirm('https://github.com/laravel-china/docs  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ ��һ��ַʹ����δ֧�ֵ�Э�� (���磬gopher)��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='https://github.com/laravel-china/docs'" tppabs="https://github.com/laravel-china/docs"  target="_blank">纠错</a></li>
            <li><a href="javascript:if(confirm('http://laravel.com/api/4.2/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://laravel.com/api/4.2/'" tppabs="http://laravel.com/api/4.2/" title="Laravel Framework API"  target="_blank">API</a></li>
        </ul>
        <a href="#" class="show-primary-nav">菜单</a>
    </div>
</nav>

<div id="content">

    <section id="documentation">
        <article class="boxed">

            <ul class="version-picker--mobile nolist">
                                <li class="current">
                    <a href="docs.htm" tppabs="http://laravel-china.org/docs/4-2" title="4.2">4.2</a>
                </li>
                            </ul>
            <a href="#" class="docs-show" data-show-text="Navigate" data-hide-text="Close">Navigate</a>

            <nav id="docs">
                <ul>
<li>前言

<ul>
<li><a href="introduction.htm" tppabs="http://laravel-china.org/docs/introduction">Laravel 介绍</a></li>
<li><a href="quick.htm" tppabs="http://laravel-china.org/docs/quick">快速入门</a></li>
<li><a href="releases.htm" tppabs="http://laravel-china.org/docs/releases">框架更新记录</a></li>
<li><a href="upgrade.htm" tppabs="http://laravel-china.org/docs/upgrade">升级指南</a></li>
</ul></li>
<li>快速上手

<ul>
<li><a href="installation.htm" tppabs="http://laravel-china.org/docs/installation">安装文档</a></li>
<li><a href="configuration.htm" tppabs="http://laravel-china.org/docs/configuration">配置信息</a></li>
<li><a href="homestead.htm" tppabs="http://laravel-china.org/docs/homestead">Homestead</a></li>
<li><a href="lifecycle.htm" tppabs="http://laravel-china.org/docs/lifecycle">程序的生命周期</a></li>
<li><a href="routing.htm" tppabs="http://laravel-china.org/docs/routing">路由 Routing</a></li>
<li><a href="requests.htm" tppabs="http://laravel-china.org/docs/requests">处理用户请求和输入</a></li>
<li><a href="responses.htm" tppabs="http://laravel-china.org/docs/responses">视图和响应</a></li>
<li><a href="controllers.htm" tppabs="http://laravel-china.org/docs/controllers">控制器</a></li>
<li><a href="errors.htm" tppabs="http://laravel-china.org/docs/errors">错误和日志</a></li>
</ul></li>
<li>更多 Laravel 知识

<ul>
<li><a href="security.htm" tppabs="http://laravel-china.org/docs/security">身份认证功能</a></li>
<li><a href="billing.htm" tppabs="http://laravel-china.org/docs/billing">收费系统</a></li>
<li><a href="cache.htm" tppabs="http://laravel-china.org/docs/cache">缓存</a></li>
<li><a href="extending.htm" tppabs="http://laravel-china.org/docs/extending">扩展框架</a></li>
<li><a href="events.htm" tppabs="http://laravel-china.org/docs/events">事件</a></li>
<li><a href="facades.htm" tppabs="http://laravel-china.org/docs/facades">Facades</a></li>
<li><a href="html.htm" tppabs="http://laravel-china.org/docs/html">表单和HTML</a></li>
<li><a href="helpers.htm" tppabs="http://laravel-china.org/docs/helpers">帮助函数</a></li>
<li><a href="ioc.htm" tppabs="http://laravel-china.org/docs/ioc">IoC Container</a></li>
<li><a href="localization.htm" tppabs="http://laravel-china.org/docs/localization">本地化</a></li>
<li><a href="mail.htm" tppabs="http://laravel-china.org/docs/mail">邮件发送 Mail</a></li>
<li><a href="packages.htm" tppabs="http://laravel-china.org/docs/packages">扩展包开发</a></li>
<li><a href="pagination.htm" tppabs="http://laravel-china.org/docs/pagination">分页功能</a></li>
<li><a href="queues.htm" tppabs="http://laravel-china.org/docs/queues">队列</a></li>
<li><a href="security.htm" tppabs="http://laravel-china.org/docs/security">安全</a></li>
<li><a href="session.htm" tppabs="http://laravel-china.org/docs/session">会话</a></li>
<li><a href="ssh.htm" tppabs="http://laravel-china.org/docs/ssh">远程连接模块 SSH</a></li>
<li><a href="templates.htm" tppabs="http://laravel-china.org/docs/templates">模版引擎</a></li>
<li><a href="testing.htm" tppabs="http://laravel-china.org/docs/testing">单元测试</a></li>
<li><a href="validation.htm" tppabs="http://laravel-china.org/docs/validation">表单验证</a></li>
</ul></li>
<li>数据库 Database

<ul>
<li><a href="database.htm" tppabs="http://laravel-china.org/docs/database">数据库简单使用</a></li>
<li><a href="queries.htm" tppabs="http://laravel-china.org/docs/queries">查询构造器</a></li>
<li><a href="eloquent.htm" tppabs="http://laravel-china.org/docs/eloquent">Eloquent ORM</a></li>
<li><a href="schema.htm" tppabs="http://laravel-china.org/docs/schema">表结构构造器</a></li>
<li><a href="migrations.htm" tppabs="http://laravel-china.org/docs/migrations">Migrations &amp; Seeding</a></li>
<li><a href="redis.htm" tppabs="http://laravel-china.org/docs/redis">Redis</a></li>
</ul></li>
<li>命令行 Artisan CLI

<ul>
<li><a href="artisan.htm" tppabs="http://laravel-china.org/docs/artisan">命令行 Artisan 介绍</a></li>
<li><a href="commands.htm" tppabs="http://laravel-china.org/docs/commands">开发 Artisan 命令</a></li>
</ul></li>
</ul>
            </nav>

            <div id="docs-content">
                <h1>控制器 (Controllers)</h1>

<ul>
<li><a href="#basic-controllers">基本控制器</a></li>
<li><a href="#controller-filters">控制器过滤器(Controller filters)</a></li>
<li><a href="#restful-controllers">RESTful 控制器</a></li>
<li><a href="#resource-controllers">资源控制器</a></li>
<li><a href="#handling-missing-methods">处理遗漏的方法</a></li>
</ul>

<p><a name="basic-controllers"></a></p>

<h2>基本 Controllers</h2>

<p>除了在 <code>routes.php</code> 文件中定义所有路由层逻辑外，您可能也想利用控制器来整合这些行为。控制器可以利用更先进的框架特性的优势，如自动的<a href="ioc.htm" tppabs="http://laravel-china.org/docs/ioc">依赖注入</a>整合相关的路由逻辑到同一个类中。</p>

<p>控制器一般存放在 <code>app/controllers</code> 目录下，这个目录已默认注册在 <code>composer.json</code> 的 <code>classmap</code> 中。然而，控制器可以放在任何目录或是子目录中。路由定义与控制器类存放在哪个位置并无关系。所以，只要 Composer 知道如何自动载入控制器类，您就可以把控制器放在任何您想要的地方。</p>

<p>下面是一个基本的控制器类例子：</p>

<pre><code>class UserController extends BaseController {

    /**
     * Show the profile for the given user.
     */
    public function showProfile($id)
    {
        $user = User::find($id);

        return View::make('user.profile', array('user' =&gt; $user));
    }

}
</code></pre>

<p>所有的控制器都应该继承自 <code>BaseController</code> 类。<code>BaseController</code> 也放在 <code>app/controllers</code> 目录下，<code>BaseController</code> 可以作为放置共同控制器逻辑的地方。<code>BaseController</code> 继承了框架的 <code>Controller</code> 类。现在，我们可以像这样将请求从路由导至控制器中：</p>

<pre><code>Route::get('user/{id}', 'UserController@showProfile');
</code></pre>

<p>如果您选择使用 PHP 命名空间来分层或整合您的控制器，只要在定义路由时使用完整的类名称：</p>

<pre><code>Route::get('foo', 'Namespace\FooController@method');
</code></pre>

<blockquote>
  <p><strong>注意：</strong>既然我们使用 <a href="javascript:if(confirm('http://getcomposer.org/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://getcomposer.org/'" tppabs="http://getcomposer.org/">Composer</a> 自动载入 PHP 类，因此只要 Composer 知道如何载入控制器，控制器文件就可以放在文件系统的任何地方。对您的应用程序而言，并没有强制控制器文件要使用怎样的目录结构。路由至控制器是完全与文件系统脱离的。</p>
</blockquote>

<p>您可以为控制器路由指定名称：</p>

<pre><code>Route::get('foo', array('uses' =&gt; 'FooController@method',
                                        'as' =&gt; 'name'));
</code></pre>

<p>您可以使用 <code>URL::action</code> 方法或者是 <code>action</code> 辅助方法来产生到控制器行为的 URL：</p>

<pre><code>$url = URL::action('FooController@method');

$url = action('FooController@method');
</code></pre>

<p>您可以利用 <code>currentRouteAction</code> 方法取得正在执行的控制器行为名称：</p>

<pre><code>$action = Route::currentRouteAction();
</code></pre>

<p><a name="controller-filters"></a></p>

<h2>控制器过滤器</h2>

<p><a href="routing.htm#route-filters" tppabs="http://laravel-china.org/docs/routing#route-filters">过滤器(Filter)</a> 在控制器路由中定义方式，如同"一般"的路由一样。</p>

<pre><code>Route::get('profile', array('before' =&gt; 'auth',
            'uses' =&gt; 'UserController@showProfile'));
</code></pre>

<p>然而，您也可以在控制器中指定过滤器：</p>

<pre><code>class UserController extends BaseController {

    /**
     * Instantiate a new UserController instance.
     */
    public function __construct()
    {
        $this-&gt;beforeFilter('auth', array('except' =&gt; 'getLogin'));

        $this-&gt;beforeFilter('csrf', array('on' =&gt; 'post'));

        $this-&gt;afterFilter('log', array('only' =&gt;
                            array('fooAction', 'barAction')));
    }

}
</code></pre>

<p>您可以在控制器里使用闭合函数定义过滤器：</p>

<pre><code>class UserController extends BaseController {

    /**
     * Instantiate a new UserController instance.
     */
    public function __construct()
    {
        $this-&gt;beforeFilter(function()
        {
            //
        });
    }

}
</code></pre>

<p>如果您想使用控制器里的方法当做过滤器，您可以使用<code>@</code>语法定义过滤器：</p>

<pre><code>class UserController extends BaseController {

    /**
     * Instantiate a new UserController instance.
     */
    public function __construct()
    {
        $this-&gt;beforeFilter('@filterRequests');
    }

    /**
     * Filter the incoming requests.
     */
    public function filterRequests($route, $request)
    {
        //
    }

}
</code></pre>

<p><a name="restful-controllers"></a></p>

<h2>RESTful 控制器</h2>

<p>Laravel 让您可以简单的经由定义一个路由规则来处理控制器里的所有遵照 REST 命名规范的行为。首先，使用 <code>Route::controller</code> 方法定义路由：</p>

<pre><code>Route::controller('users', 'UserController');
</code></pre>

<p><code>controller</code> 方法可以接收两个参数，第一个是控制器对应的基本 URI，第二个是控制器的类名称。接下来，只要把对应的 HTTP 请求动词前缀加在控制器方法前：</p>

<pre><code>class UserController extends BaseController {

    public function getIndex()
    {
        //
    }

    public function postProfile()
    {
        //
    }

    public function anyLogin()
    {
        //
    }

}
</code></pre>

<p><code>index</code> 方法会对应到 controller 的根 URI，以上面的例子来说，就是 <code>users</code>。</p>

<p>若您的控制器方法包含很多单词，您可以在 URI 使用 "破折号(-)" 来对应方法。例如 <code>UserController</code> 中，如下的方法会对应到 <code>users/admin-profile</code> URI：</p>

<pre><code>public function getAdminProfile() {}
</code></pre>

<p><a name="resource-controllers"></a></p>

<h2>资源控制器</h2>

<p>资源控制器可以简单的建立跟资源相关的 RESTful 控制器。例如，您可能想要建立控制器来管理应用程序里储存的照片。通过 Artisan 命令行工具里的 <code>controller:make</code> 以及使用 <code>Route::resource</code> 方法，可以很快的创建控制器。</p>

<p>命令行执行以下命令建立控制器：</p>

<pre><code>php artisan controller:make PhotoController
</code></pre>

<p>然后我们可以注册一个资源化路由至控制器上：</p>

<pre><code>Route::resource('photo', 'PhotoController');
</code></pre>

<p>此单一路由定义创建了处理一系列对图片资源的 RESTful 行为路由。同样的，刚才产生的控制器文件里面, 对这些动作已经有预先建立好的对应方法，以及注释告知对应的 URI 和所处理的请求动作。</p>

<h4>资源控制器对应的动作</h4>

<table>
<thead>
<tr>
  <th>Verb</th>
  <th>Path</th>
  <th>Action</th>
  <th>Route Name</th>
</tr>
</thead>
<tbody>
<tr>
  <td>GET</td>
  <td>/resource</td>
  <td>index</td>
  <td>resource.index</td>
</tr>
<tr>
  <td>GET</td>
  <td>/resource/create</td>
  <td>create</td>
  <td>resource.create</td>
</tr>
<tr>
  <td>POST</td>
  <td>/resource</td>
  <td>store</td>
  <td>resource.store</td>
</tr>
<tr>
  <td>GET</td>
  <td>/resource/{resource}</td>
  <td>show</td>
  <td>resource.show</td>
</tr>
<tr>
  <td>GET</td>
  <td>/resource/{resource}/edit</td>
  <td>edit</td>
  <td>resource.edit</td>
</tr>
<tr>
  <td>PUT/PATCH</td>
  <td>/resource/{resource}</td>
  <td>update</td>
  <td>resource.update</td>
</tr>
<tr>
  <td>DELETE</td>
  <td>/resource/{resource}</td>
  <td>destroy</td>
  <td>resource.destroy</td>
</tr>
</tbody>
</table>

<p>有时您可能只需要对应部分的资源的动作：</p>

<pre><code>php artisan controller:make PhotoController --only=index,show

php artisan controller:make PhotoController --except=index
</code></pre>

<p>您也可以在路由定义时指定只需要对应的动作：</p>

<pre><code>Route::resource('photo', 'PhotoController',
                array('only' =&gt; array('index', 'show')));

Route::resource('photo', 'PhotoController',
                array('except' =&gt; array('create', 'store', 'update', 'destroy')));
</code></pre>

<p>默认所有的资源控制器动作都有路由名称，您也可以在选项传入 <code>names</code> 数组，重写这些名称：</p>

<pre><code>Route::resource('photo', 'PhotoController',
                array('names' =&gt; array('create' =&gt; 'photo.build')));
</code></pre>

<h4>处理嵌套资源控制器</h4>

<p>为了使用嵌套资源控制器，在路由定义时使用"点"表示法：</p>

<pre><code>Route::resource('photos.comments', 'PhotoCommentController');
</code></pre>

<p>这个路由规则会注册一个"嵌套"资源，可以对应如下的 URLs：<code>photos/{photoResource}/comments/{commentResource}</code>。</p>

<pre><code>class PhotoCommentController extends BaseController {

    public function show($photoId, $commentId)
    {
        //
    }

}
</code></pre>

<h4>增加额外路由规则到 Resource Controller</h4>

<p>您果您需要增加额外的 route 规则到默认的 resource controller，您应该在定义<code>Route::resource</code>之前定义这些规则：</p>

<pre><code>Route::get('photos/popular');
Route::resource('photos', 'PhotoController');
</code></pre>

<p><a name="handling-missing-methods"></a></p>

<h2>对应缺失的方法</h2>

<p>可以定义一个 catch-all 方法，当 controller 找不到对应的方法时就会被调用，这个方法名称为<code>missingMethod</code>, 会传入请求的方法和参数数组：</p>

<h4>定义一个 Catch-All 方法</h4>

<pre><code>public function missingMethod($parameters = array())
{
    //
}
</code></pre>
            </div>

        </article>
    </section>

</div>

<footer id="foot" class="textcenter">
    <div class="boxed">

        <nav id="secondary">
            <div id="logo-foot">
                <a href="javascript:if(confirm('http://laravel.com/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://laravel.com/'" tppabs="http://laravel.com/"><img src="logo-foot.png" tppabs="http://laravel-china.qiniudn.com/assets/img/logo-foot.png" alt="Laravel"></a>
            </div>
            <ul>
                <li><a href="javascript:if(confirm('http://laravel.com/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://laravel.com/'" tppabs="http://laravel.com/"  target="_blank">官网</a></li>
                <li><a href="javascript:if(confirm('https://forge.laravel.com/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ ��һ��ַʹ����δ֧�ֵ�Э�� (���磬gopher)��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='https://forge.laravel.com/'" tppabs="https://forge.laravel.com/"  target="_blank">Hosting</a></li>
                <li><a href="javascript:if(confirm('http://laravel.com/docs  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://laravel.com/docs'" tppabs="http://laravel.com/docs" title="Documentation"  target="_blank">英文文档</a></li>
                <li><a href="javascript:if(confirm('http://github.com/laravel/laravel  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://github.com/laravel/laravel'" tppabs="http://github.com/laravel/laravel" title="Github"  target="_blank">Laravel at Github</a></li>
                <li><a href="javascript:if(confirm('http://laravel.io/forum  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://laravel.io/forum'" tppabs="http://laravel.io/forum" title="Laravel Forums"  target="_blank">英文论坛</a></li>
                <li><a href="javascript:if(confirm('http://twitter.com/laravelphp  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://twitter.com/laravelphp'" tppabs="http://twitter.com/laravelphp" title="Laravel on Twitter"  target="_blank">Twitter</a></li>
            </ul>
        </nav>

    </div>
</footer>

<div id="top">
    <a href="#index" title="Back to the top">
        <i class="icon-chevron-up"></i>
    </a>
</div>


    </div>

    <section id="copyright" class="textcenter">
        <div class="boxed">
            <div class="animated slideInLeft">
                Laravel is a trademark of Taylor Otwell.<br class="br-mobile--footer">
                Copyright &copy; <a href="javascript:if(confirm('http://twitter.com/taylorotwell  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://twitter.com/taylorotwell'" tppabs="http://twitter.com/taylorotwell" title="Taylor Otwell" target="_blank">Taylor Otwell</a>.<br class="br-mobile--footer">
                Website built with &hearts; <a href="javascript:if(confirm('http://ikreativ.com/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://ikreativ.com/'" tppabs="http://ikreativ.com/" title="iKreativ" target="_blank">iKreativ</a>;<br class="br-mobile--footer">
                responsive by <a href="javascript:if(confirm('http://tighten.co/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://tighten.co/'" tppabs="http://tighten.co/" title="Tighten Co." target="_blank">Tighten Co.</a>
            </div>
        </div>
    </section>

	<script src="bundle.js" tppabs="http://laravel-china.qiniudn.com/assets/js/bundle.js"></script>
    
    

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"beacon-1.newrelic.com","licenseKey":"39b5324581","applicationID":"10871142","transactionName":"YFwAZUNVXUBUAkANW1kWN0NYG1pdUQRMSkRfSQ==","queueTime":0,"applicationTime":56,"ttGuid":"","agentToken":"","atts":"TBsDEwtPTk4=","errorBeacon":"bam.nr-data.net","agent":"js-agent.newrelic.com\/nr-476.min.js"}</script></body>
</html>
