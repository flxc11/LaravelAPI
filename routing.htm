<html><!doctype html>

<html lang="en">

<head>
    <title>Laravel 中文文档</title>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=9,chrome=1">
    <meta name="author" content="Laravel 中国">
    <meta name="description" content="Laravel 中文文档, 致力于推动 Laravel, php-fig 等国外 PHP 新技术, 新理念在中国的发展.">
    <meta name="keywords" content="laravel中国,laravel中文, laravel框架中文, laravel框架中国, php, framework, web, artisans, taylor otwell">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="shortcut icon" href="favicon.png" tppabs="http://laravel-china.qiniudn.com/favicon.png">

    <link href="styles.css" tppabs="http://laravel-china.qiniudn.com/assets/css/styles.css" rel="stylesheet">

    <!--[if IE]><link href="http://laravel-china.qiniudn.com/assets/css/ie.css" rel="stylesheet" type="text/css"><![endif]-->

    <!-- HTML5 elements in less than IE9, yes please! -->
    <!--[if lt IE 9]><script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->

    <!-- If less than IE8 add some JS for the webfont icons -->
    <!--[if lt IE 8]><script src="http://laravel-china.qiniudn.com/assets/js/ie_font.js"></script><![endif]-->

        
    
    <style>
#documentation nav#docs ul li ul li a {
font-weight: 600;
font-size: 13px;
}
nav#primary.fixed {
opacity: .9;
 position: inherit; 
top: 0;
}

p {
font-size: inherit;
line-height: 1.4em;
margin: 0 0 .8em;
}
html, body {
height: 100%;
font-size: 14px;
color: #333333;
font-family: "Heiti SC Light", "Helvetica Neue", Verdana, 微软雅黑, Arial, sans-serif;
background: #e5e5e5;
}
#documentation nav#docs {
    width: 250px;
}
code, kbd, pre, samp {
    font-size: inherit;
}
code {
background: #F1F1F1;
color: #f4645f;
padding: 0 5px;
border-radius: 3px;
}
p {
line-height: 1.8em;
}
#documentation nav#docs {
width: 170px;
}

@media only screen and (min-width: 1024px) {
#documentation #docs-content {
display: block;
float: right;
padding-left: 35px;
padding-right: 35px;
width: 830px;
}
}

.primary-nav-ul li a {
border-bottom: 0;
font-size: 14px;
padding: 0 0 0 25px;
width: auto;
}
.prettyprint code {
font-family: Monaco,Consolas,"Lucida Console",monospace;
font-size: 13px;
}
    </style>
</head>

<body id="index" class="page">

    <!--[if lt IE 7]>
        <p>Your browser is <em>ancient!</em> <a href="http://browsehappy.com/">Upgrade to a different browser</a> or <a href="http://www.google.com/chromeframe/?redirect=true">install Google Chrome Frame</a> to experience this site.</p>
    <![endif]-->

    <div id="wrapper">

    <header id="header" role="header">
    <div class="boxed">
        <div id="tagline">
            <h1><a href="index.htm" tppabs="http://laravel-china.org/" style="color:white; font-wight:bold;">Laravel China</a></h1>
        </div>

        <div id="version">
            <ul class="nolist">
                                    <li class="current">
                        <a href="docs.htm" tppabs="http://laravel-china.org/docs/4-2" title="4.2">4.2</a>
                    </li>
                            </ul>
        </div>
    </div>
</header>

<nav id="primary">
    <div class="boxed">
        <div id="logo-head">
            <a href="index.htm" tppabs="http://laravel-china.org/"><img src="logo-head.png" tppabs="http://laravel-china.qiniudn.com/assets/img/logo-head.png" alt="Laravel"></a>
        </div>
        <ul class="primary-nav-ul">
            <li class="current-item"><a href="docs.htm" tppabs="http://laravel-china.org/docs/docs" title="Documentation">文档</a></li>
            <li><a href="javascript:if(confirm('http://phphub.org/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://phphub.org/'" tppabs="http://phphub.org/" title="PHPhub"  target="_blank">论坛</a></li>
            <li><a href="javascript:if(confirm('https://github.com/laravel-china/docs  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ ��һ��ַʹ����δ֧�ֵ�Э�� (���磬gopher)��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='https://github.com/laravel-china/docs'" tppabs="https://github.com/laravel-china/docs"  target="_blank">纠错</a></li>
            <li><a href="javascript:if(confirm('http://laravel.com/api/4.2/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://laravel.com/api/4.2/'" tppabs="http://laravel.com/api/4.2/" title="Laravel Framework API"  target="_blank">API</a></li>
        </ul>
        <a href="#" class="show-primary-nav">菜单</a>
    </div>
</nav>

<div id="content">

    <section id="documentation">
        <article class="boxed">

            <ul class="version-picker--mobile nolist">
                                <li class="current">
                    <a href="docs.htm" tppabs="http://laravel-china.org/docs/4-2" title="4.2">4.2</a>
                </li>
                            </ul>
            <a href="#" class="docs-show" data-show-text="Navigate" data-hide-text="Close">Navigate</a>

            <nav id="docs">
                <ul>
<li>前言

<ul>
<li><a href="introduction.htm" tppabs="http://laravel-china.org/docs/introduction">Laravel 介绍</a></li>
<li><a href="quick.htm" tppabs="http://laravel-china.org/docs/quick">快速入门</a></li>
<li><a href="releases.htm" tppabs="http://laravel-china.org/docs/releases">框架更新记录</a></li>
<li><a href="upgrade.htm" tppabs="http://laravel-china.org/docs/upgrade">升级指南</a></li>
</ul></li>
<li>快速上手

<ul>
<li><a href="installation.htm" tppabs="http://laravel-china.org/docs/installation">安装文档</a></li>
<li><a href="configuration.htm" tppabs="http://laravel-china.org/docs/configuration">配置信息</a></li>
<li><a href="homestead.htm" tppabs="http://laravel-china.org/docs/homestead">Homestead</a></li>
<li><a href="lifecycle.htm" tppabs="http://laravel-china.org/docs/lifecycle">程序的生命周期</a></li>
<li><a href="routing.htm" tppabs="http://laravel-china.org/docs/routing">路由 Routing</a></li>
<li><a href="requests.htm" tppabs="http://laravel-china.org/docs/requests">处理用户请求和输入</a></li>
<li><a href="responses.htm" tppabs="http://laravel-china.org/docs/responses">视图和响应</a></li>
<li><a href="controllers.htm" tppabs="http://laravel-china.org/docs/controllers">控制器</a></li>
<li><a href="errors.htm" tppabs="http://laravel-china.org/docs/errors">错误和日志</a></li>
</ul></li>
<li>更多 Laravel 知识

<ul>
<li><a href="security.htm" tppabs="http://laravel-china.org/docs/security">身份认证功能</a></li>
<li><a href="billing.htm" tppabs="http://laravel-china.org/docs/billing">收费系统</a></li>
<li><a href="cache.htm" tppabs="http://laravel-china.org/docs/cache">缓存</a></li>
<li><a href="extending.htm" tppabs="http://laravel-china.org/docs/extending">扩展框架</a></li>
<li><a href="events.htm" tppabs="http://laravel-china.org/docs/events">事件</a></li>
<li><a href="facades.htm" tppabs="http://laravel-china.org/docs/facades">Facades</a></li>
<li><a href="html.htm" tppabs="http://laravel-china.org/docs/html">表单和HTML</a></li>
<li><a href="helpers.htm" tppabs="http://laravel-china.org/docs/helpers">帮助函数</a></li>
<li><a href="ioc.htm" tppabs="http://laravel-china.org/docs/ioc">IoC Container</a></li>
<li><a href="localization.htm" tppabs="http://laravel-china.org/docs/localization">本地化</a></li>
<li><a href="mail.htm" tppabs="http://laravel-china.org/docs/mail">邮件发送 Mail</a></li>
<li><a href="packages.htm" tppabs="http://laravel-china.org/docs/packages">扩展包开发</a></li>
<li><a href="pagination.htm" tppabs="http://laravel-china.org/docs/pagination">分页功能</a></li>
<li><a href="queues.htm" tppabs="http://laravel-china.org/docs/queues">队列</a></li>
<li><a href="security.htm" tppabs="http://laravel-china.org/docs/security">安全</a></li>
<li><a href="session.htm" tppabs="http://laravel-china.org/docs/session">会话</a></li>
<li><a href="ssh.htm" tppabs="http://laravel-china.org/docs/ssh">远程连接模块 SSH</a></li>
<li><a href="templates.htm" tppabs="http://laravel-china.org/docs/templates">模版引擎</a></li>
<li><a href="testing.htm" tppabs="http://laravel-china.org/docs/testing">单元测试</a></li>
<li><a href="validation.htm" tppabs="http://laravel-china.org/docs/validation">表单验证</a></li>
</ul></li>
<li>数据库 Database

<ul>
<li><a href="database.htm" tppabs="http://laravel-china.org/docs/database">数据库简单使用</a></li>
<li><a href="queries.htm" tppabs="http://laravel-china.org/docs/queries">查询构造器</a></li>
<li><a href="eloquent.htm" tppabs="http://laravel-china.org/docs/eloquent">Eloquent ORM</a></li>
<li><a href="schema.htm" tppabs="http://laravel-china.org/docs/schema">表结构构造器</a></li>
<li><a href="migrations.htm" tppabs="http://laravel-china.org/docs/migrations">Migrations &amp; Seeding</a></li>
<li><a href="redis.htm" tppabs="http://laravel-china.org/docs/redis">Redis</a></li>
</ul></li>
<li>命令行 Artisan CLI

<ul>
<li><a href="artisan.htm" tppabs="http://laravel-china.org/docs/artisan">命令行 Artisan 介绍</a></li>
<li><a href="commands.htm" tppabs="http://laravel-china.org/docs/commands">开发 Artisan 命令</a></li>
</ul></li>
</ul>
            </nav>

            <div id="docs-content">
                <h1>路由</h1>

<ul>
<li><a href="#basic-routing">基本路由</a></li>
<li><a href="#route-parameters">路由参数</a></li>
<li><a href="#route-filters">路由筛选</a></li>
<li><a href="#named-routes">路由命名</a></li>
<li><a href="#route-groups">路由群组</a></li>
<li><a href="#sub-domain-routing">子域名路由</a></li>
<li><a href="#route-prefixing">前缀路由</a></li>
<li><a href="#route-model-binding">路由模型绑定</a></li>
<li><a href="#throwing-404-errors">404 错误</a></li>
<li><a href="#routing-to-controllers">控制器路由</a></li>
</ul>

<p><a name="basic-routing"></a></p>

<h2>基本路由</h2>

<p>应用程序大多数的路由都会被定义在 <code>app/routes.php</code> 中。最简单的一个路由是由一个 URI 和闭包回调(Closure callback)构成的。</p>

<h4>基本 GET 路由</h4>

<pre><code>Route::get('/', function()
{
    return 'Hello World';
});
</code></pre>

<h4>基本 POST 路由</h4>

<pre><code>Route::post('foo/bar', function()
{
    return 'Hello World';
});
</code></pre>

<h4>在一个路由中注册多种请求</h4>

<pre><code>Route::match(array('GET', 'POST'), '/', function()
{
    return 'Hello World';
});
</code></pre>

<h4>在一个路由中回应所有 HTTP 请求</h4>

<pre><code>Route::any('foo', function()
{
    return 'Hello World';
});
</code></pre>

<h4>强制路由使用 HTTPS</h4>

<pre><code>Route::get('foo', array('https', function()
{
    return 'Must be over HTTPS';
}));
</code></pre>

<p>通常情况下，您需要生成 URLs 到你的路由中，您可以使用 <code>URL::to</code> 方法来实现：</p>

<pre><code>$url = URL::to('foo');
</code></pre>

<p><a name="route-parameters"></a></p>

<h2>路由参数</h2>

<pre><code>Route::get('user/{id}', function($id)
{
    return 'User '.$id;
});
</code></pre>

<h4>可选路由参数</h4>

<pre><code>Route::get('user/{name?}', function($name = null)
{
    return $name;
});
</code></pre>

<h4>带默认值的可选路由参数</h4>

<pre><code>Route::get('user/{name?}', function($name = 'John')
{
    return $name;
});
</code></pre>

<h4>正规表达式路由</h4>

<pre><code>Route::get('user/{name}', function($name)
{
    //
})
-&gt;where('name', '[A-Za-z]+');

Route::get('user/{id}', function($id)
{
    //
})
-&gt;where('id', '[0-9]+');
</code></pre>

<h4>传递数组并使用 Where 筛选</h4>

<p>如果需要，您可以传递限制条件的数组：</p>

<pre><code>Route::get('user/{id}/{name}', function($id, $name)
{
    //
})
-&gt;where(array('id' =&gt; '[0-9]+', 'name' =&gt; '[a-z]+'))
</code></pre>

<h4>定义全局正则表达式 Pattern</h4>

<p>如果您有常用的正则表达式 Pattern，您可以使用 <code>pattern</code> 方法：</p>

<pre><code>Route::pattern('id', '[0-9]+');

Route::get('user/{id}', function($id)
{
    // Only called if {id} is numeric.
});
</code></pre>

<h4>获取路由参数值</h4>

<p>如果您要在路由之外获取路由参数值，您可以使用 <code>Route::input</code> 方法：</p>

<pre><code>Route::filter('foo', function()
{
    if (Route::input('id') == 1)
    {
        //
    }
});
</code></pre>

<p><a name="route-filters"></a></p>

<h2>路由筛选器</h2>

<p>路由筛选器能便捷的给指定的路由提供访问限制，这对于您的站点需要认证的情况下非常有用。在 Laravel 框架中包含了数个筛选器，如 <code>auth</code>, <code>auth.basic</code>, <code>guest</code> 和 <code>csrf</code> 筛选器。他们都放在 <code>app/filters.php</code> 中。</p>

<h4>定义一个路由筛选器</h4>

<pre><code>Route::filter('old', function()
{
    if (Input::get('age') &lt; 200)
    {
        return Redirect::to('home');
    }
});
</code></pre>

<p>如果筛选器有了回应，这个回应将会直接被视为该请求的回应，且路由将不会继续被执行，任何路由的 <code>after</code> 筛选器都将直接被取消。</p>

<h4>对路由加上筛选器</h4>

<pre><code>Route::get('user', array('before' =&gt; 'old', function()
{
    return 'You are over 200 years old!';
}));
</code></pre>

<h4>对控制器动作加上筛选器</h4>

<pre><code>Route::get('user', array('before' =&gt; 'old', 'uses' =&gt; 'UserController@showProfile'));
</code></pre>

<h4>对单一路由加上多个筛选器</h4>

<pre><code>Route::get('user', array('before' =&gt; 'auth|old', function()
{
    return 'You are authenticated and over 200 years old!';
}));
</code></pre>

<h4>通过数组加上多个筛选器</h4>

<pre><code>Route::get('user', array('before' =&gt; array('auth', 'old'), function()
{
    return 'You are authenticated and over 200 years old!';
}));
</code></pre>

<h4>指定筛选器参数</h4>

<pre><code>Route::filter('age', function($route, $request, $value)
{
    //
});

Route::get('user', array('before' =&gt; 'age:200', function()
{
    return 'Hello World';
}));
</code></pre>

<p>在筛选器接收到一个 <code>$response</code> 会被当成第三个参数传递进筛选器：</p>

<pre><code>Route::filter('log', function($route, $request, $response)
{
    //
});
</code></pre>

<h4>筛选器样式</h4>

<p>您可以依据路由符合的 URI 来指定其筛选器：</p>

<pre><code>Route::filter('admin', function()
{
    //
});

Route::when('admin/*', 'admin');
</code></pre>

<p>在上面的例子中，<code>admin</code> 筛选器将会套用在所有以 <code>admin/</code> 开头的路由中。<code>*</code> 通常用作通配符，他会匹配任何的字串组合。</p>

<p>您一样可以筛选指定的 HTTP 动作：</p>

<pre><code>Route::when('admin/*', 'admin', array('post'));
</code></pre>

<h4>筛选器类</h4>

<p>进阶的筛选，您可以使用类来取代闭包。因为所有的类都可以通过 <a href="ioc.htm" tppabs="http://laravel-china.org/docs/ioc">IoC Container</a> 来实例化, 你可以利用依赖注入来获取更高的可测试性.</p>

<h4>注册基于类的筛选器</h4>

<pre><code>Route::filter('foo', 'FooFilter');
</code></pre>

<p>默认下，<code>FooFilter</code> 类的 <code>filter</code> 方法将会被调用：</p>

<pre><code>class FooFilter {

    public function filter()
    {
        // Filter logic...
    }

}
</code></pre>

<p>如果您不希望使用 <code>filter</code> 方法，只要指定其他方法即可：</p>

<pre><code>Route::filter('foo', 'FooFilter@foo');
</code></pre>

<p><a name="named-routes"></a></p>

<h2>路由命名</h2>

<p>路由命名在产生重定向跳转与 URLs 至路由时更为方便。您可以指定一个名称给指定的路由：</p>

<pre><code>Route::get('user/profile', array('as' =&gt; 'profile', function()
{
    //
}));
</code></pre>

<p>您一样可以为控制器动作指定一个路由名称：</p>

<pre><code>Route::get('user/profile', array('as' =&gt; 'profile', 'uses' =&gt; 'UserController@showProfile'));
</code></pre>

<p>现在您可以在产生 URLs 或重定向跳转时使用该路由名称：</p>

<pre><code>$url = URL::route('profile');

$redirect = Redirect::route('profile');
</code></pre>

<p>您一样可以通过 <code>currentRouteName</code> 方法来取得正在执行中的路由名称：</p>

<pre><code>$name = Route::currentRouteName();
</code></pre>

<p><a name="route-groups"></a></p>

<h2>路由群组</h2>

<p>有时候您需要套用筛选器到一个群组的路由上。不需要为每个路由去套用筛选器，您只需使用路由群组:</p>

<pre><code>Route::group(array('before' =&gt; 'auth'), function()
{
    Route::get('/', function()
    {
        // Has Auth Filter
    });

    Route::get('user/profile', function()
    {
        // Has Auth Filter
    });
});
</code></pre>

<p>您一样可以在 <code>group</code> 数组中使用 <code>namespace</code> 参数，指定在这 group 中的控制器都有一个共同的命名空间：</p>

<pre><code>Route::group(array('namespace' =&gt; 'Admin'), function()
{
    //
});
</code></pre>

<p><a name="sub-domain-routing"></a></p>

<h2>子域名路由</h2>

<p>Laravel 路由一样可以处理通配的子域名，并且从域名中传递您的通配符参数：</p>

<h4>注册子域名路由</h4>

<pre><code>Route::group(array('domain' =&gt; '{account}.myapp.com'), function()
{

    Route::get('user/{id}', function($account, $id)
    {
        //
    });

});
</code></pre>

<p><a name="route-prefixing"></a></p>

<h2>前缀路由</h2>

<p>群组路由可以通过群组的描述数组中使用 <code>prefix</code> 选项，将群组内的路由加上前缀：</p>

<pre><code>Route::group(array('prefix' =&gt; 'admin'), function()
{

    Route::get('user', function()
    {
        //
    });

});
</code></pre>

<p><a name="route-model-binding"></a></p>

<h2>路由模型绑定</h2>

<p>模型绑定提供一个方便的方式将模型实体注入到您的路由中。例如，要注入一个用户 ID 您可以注入符合给定 ID 的整个用户模型实体。首先，使用 <code>Route::model</code> 方法可以指定作为参数的模型：</p>

<h4>绑定参数至模型</h4>

<pre><code>Route::model('user', 'User');
</code></pre>

<p>接着，定义一个路由并包括一个 <code>{user}</code> 参数：</p>

<pre><code>Route::get('profile/{user}', function(User $user)
{
    //
});
</code></pre>

<p>既然我们绑定了 <code>{user}</code> 参数到 <code>User</code> 模型，则 <code>User</code> 实体就会被注入到路由内。因此，假定有一个请求送至 <code>profile/1</code> 则会注入一个 ID 为 1 的 <code>User</code> 实体。</p>

<blockquote>
  <p><strong>注意：</strong> 假如在数据库内没有任何一个模型实体符合，则会抛出 404 错误。</p>
</blockquote>

<p>假如您想指定自定的「找不到」行为，您可以在 <code>model</code> 方法里的第三个参数指定一个 Closure：</p>

<pre><code>Route::model('user', 'User', function()
{
    throw new NotFoundHttpException;
});
</code></pre>

<p>在某些情况下，您可能会希望可以使用您自定义的路由绑定方式。这时您可以使用 <code>Route::bind</code> 方法来达成：</p>

<pre><code>Route::bind('user', function($value, $route)
{
    return User::where('name', $value)-&gt;first();
});
</code></pre>

<p><a name="throwing-404-errors"></a></p>

<h2>404 错误</h2>

<p>有两种方式可以在路由内手动触发 404 错误。第一种是调用 <code>App::abort</code> 方法：</p>

<pre><code>App::abort(404);
</code></pre>

<p>第二种，您可以抛出一个 <code>Symfony\Component\HttpKernel\Exception\NotFoundHttpException</code> 实体。</p>

<p>有关如何处理 404 异常状况和自定义回应的详细信息，可以参考 <a href="errors.htm#handling-404-errors" tppabs="http://laravel-china.org/docs/errors#handling-404-errors">错误</a> 章节内的说明。</p>

<p><a name="routing-to-controllers"></a></p>

<h2>控制器路由</h2>

<p>Laravel 允许您不止可以路由至 Closures，也可以路由至控制器类，甚至可以路由至 <a href="controllers.htm#resource-controllers" tppabs="http://laravel-china.org/docs/controllers#resource-controllers">资源控制器</a>。</p>

<p>更多详细信息可参考 <a href="controllers.htm" tppabs="http://laravel-china.org/docs/controllers">控制器</a> 一节内的说明。</p>
            </div>

        </article>
    </section>

</div>

<footer id="foot" class="textcenter">
    <div class="boxed">

        <nav id="secondary">
            <div id="logo-foot">
                <a href="javascript:if(confirm('http://laravel.com/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://laravel.com/'" tppabs="http://laravel.com/"><img src="logo-foot.png" tppabs="http://laravel-china.qiniudn.com/assets/img/logo-foot.png" alt="Laravel"></a>
            </div>
            <ul>
                <li><a href="javascript:if(confirm('http://laravel.com/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://laravel.com/'" tppabs="http://laravel.com/"  target="_blank">官网</a></li>
                <li><a href="javascript:if(confirm('https://forge.laravel.com/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ ��һ��ַʹ����δ֧�ֵ�Э�� (���磬gopher)��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='https://forge.laravel.com/'" tppabs="https://forge.laravel.com/"  target="_blank">Hosting</a></li>
                <li><a href="javascript:if(confirm('http://laravel.com/docs  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://laravel.com/docs'" tppabs="http://laravel.com/docs" title="Documentation"  target="_blank">英文文档</a></li>
                <li><a href="javascript:if(confirm('http://github.com/laravel/laravel  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://github.com/laravel/laravel'" tppabs="http://github.com/laravel/laravel" title="Github"  target="_blank">Laravel at Github</a></li>
                <li><a href="javascript:if(confirm('http://laravel.io/forum  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://laravel.io/forum'" tppabs="http://laravel.io/forum" title="Laravel Forums"  target="_blank">英文论坛</a></li>
                <li><a href="javascript:if(confirm('http://twitter.com/laravelphp  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://twitter.com/laravelphp'" tppabs="http://twitter.com/laravelphp" title="Laravel on Twitter"  target="_blank">Twitter</a></li>
            </ul>
        </nav>

    </div>
</footer>

<div id="top">
    <a href="#index" title="Back to the top">
        <i class="icon-chevron-up"></i>
    </a>
</div>


    </div>

    <section id="copyright" class="textcenter">
        <div class="boxed">
            <div class="animated slideInLeft">
                Laravel is a trademark of Taylor Otwell.<br class="br-mobile--footer">
                Copyright &copy; <a href="javascript:if(confirm('http://twitter.com/taylorotwell  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://twitter.com/taylorotwell'" tppabs="http://twitter.com/taylorotwell" title="Taylor Otwell" target="_blank">Taylor Otwell</a>.<br class="br-mobile--footer">
                Website built with &hearts; <a href="javascript:if(confirm('http://ikreativ.com/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://ikreativ.com/'" tppabs="http://ikreativ.com/" title="iKreativ" target="_blank">iKreativ</a>;<br class="br-mobile--footer">
                responsive by <a href="javascript:if(confirm('http://tighten.co/  \n\n�ļ���δ�� Teleport Pro ȡ�أ���Ϊ �������·��������ʼ��ַ�����õķ�Χ��  \n\n��Ҫ�ӷ������ϴ�����'))window.location='http://tighten.co/'" tppabs="http://tighten.co/" title="Tighten Co." target="_blank">Tighten Co.</a>
            </div>
        </div>
    </section>

	<script src="bundle.js" tppabs="http://laravel-china.qiniudn.com/assets/js/bundle.js"></script>
    
    

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"beacon-1.newrelic.com","licenseKey":"39b5324581","applicationID":"10871142","transactionName":"YFwAZUNVXUBUAkANW1kWN0NYG1pdUQRMSkRfSQ==","queueTime":0,"applicationTime":70,"ttGuid":"","agentToken":"","atts":"TBsDEwtPTk4=","errorBeacon":"bam.nr-data.net","agent":"js-agent.newrelic.com\/nr-476.min.js"}</script></body>
</html>
